version: "3"
services:
  php54rdkafka403:
    image: run/php54rdkafka403:v1
    build:
      context: ../../../docker-file/run/php54rdkafka403
      dockerfile: Dockerfile
    environment:
    #ifconfig docker0的ip自己修改
    - HOST_IP=172.17.0.1
    volumes:
    - /www:/www
    - /tmp:/tmp
    - /wwwlog:/wwwlog
    - /var/logs:/var/logs
    - /web/webconfig/apache/4399/vhost:/usr/local/apache/conf/vhost
    - /home/lyh/.ssh:/root/.ssh
    - /data/app/review:/data/app/review
    - /web/webconfig/host/4399/hosts:/work/webconfig/host/4399/hosts
    - /web/online_service/config_file:/web/online_service/config_file
    external_links:
    - kafka:kafka
    #调用自定义网络kafka_default
  #    networks:
  #    - kafka_default
  nginx:
    image: run/nginx1.8:v1
    build:
      context: ../../../docker-file/run/nginx1.8
      dockerfile: Dockerfile
    ports:
    - "80:80"
    volumes:
    - /www:/www
    - /wwwlog:/wwwlog
    - /tmp:/tmp
    - /web/webconfig/nginx/4399/vhost:/usr/local/nginx/conf/vhost
    links:
    - php54rdkafka403:php54
  #声明自定义网络,并且声明的是一个已经存在的网络,这样就可以连接到外部服务的容器le
  #networks:
  #  kafka_default:
  #    external:
  #      name: kafka_default
  #  mysql8.0:
  #    image: run/mysql8.0:v1
  #    build:
  #      context: ../../../docker-file/run/mysql8.0
  #      dockerfile: Dockerfile
  #    ports:
  #    - "3306:3306"
  #    environment:
  #    #ifconfig docker0的ip自己修改
  #    - HOST_IP=172.17.0.1
  #https://hub.docker.com/layers/elasticsearch/library/elasticsearch/5.5.2-alpine/images/sha256-e5a0a6044f71be0fa35f2964f926ae17d915a156b7e6ff4263a5fd31e9f164fb
#  elasticsearch5.5.2:
#    image: elasticsearch:5.5.2-alpine
#    ports:
#    - "9200:9200"
#    - "9300:9300"
#  redis5.0.7:
#    image: redis:5.0.7-alpine
#    ports:
#    - "6379:6379"
#  memcached1.5.22:
#    image: memcached:1.5.22-alpine
#    ports:
#    - "11211:11211"